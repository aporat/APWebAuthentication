name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.platform }} on ${{ matrix.os }}
    runs-on: macos-15
    env:
      scheme: APWebAuthenticationTests
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: iPhone 15 Pro
            os: 17.5
          - platform: iPhone 16 Pro
            os: 18.2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run test on ${{ matrix.platform }} (iOS ${{ matrix.os }})
        run: |
          xcodebuild test \
            -scheme $scheme \
            -destination 'platform=iOS Simulator,name=${{ matrix.platform }},OS=${{ matrix.os }}' \
            -enableCodeCoverage YES \
            -derivedDataPath ./DerivedData \
            -resultBundlePath ./TestResults.xcresult

      # Install Slather to generate lcov-compatible coverage
      - name: Install Slather
        run: gem install slather
      
      # Install xcresultparser
      - name: Install xcresultparser
        run: brew install xcresultparser
        
      # Generate lcov report using Slather
      - name: Generate Coverage Report
        run: |
          slather coverage \
            --scheme APWebAuthentication \
            --output-directory ./coverage \
            --cobertura-xml \
            --build-directory ./DerivedData \
            ./APWebAuthentication.xcodeproj

      # Convert .xcresult to JUnit XML for test results
      - name: Convert Test Results to JUnit
        run: |
          xcresultparser \
            --output-format junit \
            ./TestResults.xcresult > ./test-results.xml
            
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: aporat/APWebAuthentication
          files: ./coverage/cobertura.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: aporat/APWebAuthentication
          files: ./test-results.xml
